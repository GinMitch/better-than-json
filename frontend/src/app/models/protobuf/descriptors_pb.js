// source: src/app/models/protobuf/descriptors.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

import * as jspb from 'google-protobuf';
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.blue.muffin.models.Protobuf.AccountData', null, global);
goog.exportSymbol('proto.blue.muffin.models.Protobuf.ComponentRef', null, global);
goog.exportSymbol('proto.blue.muffin.models.Protobuf.ContainedObject', null, global);
goog.exportSymbol('proto.blue.muffin.models.Protobuf.Container', null, global);
goog.exportSymbol('proto.blue.muffin.models.Protobuf.ContainerAttributes', null, global);
goog.exportSymbol('proto.blue.muffin.models.Protobuf.EntityRef', null, global);
goog.exportSymbol('proto.blue.muffin.models.Protobuf.PropComplex1', null, global);
goog.exportSymbol('proto.blue.muffin.models.Protobuf.PropComplex2', null, global);
goog.exportSymbol('proto.blue.muffin.models.Protobuf.PropDetailed', null, global);
goog.exportSymbol('proto.blue.muffin.models.Protobuf.PropFrame', null, global);
goog.exportSymbol('proto.blue.muffin.models.Protobuf.PropOutline', null, global);
goog.exportSymbol('proto.blue.muffin.models.Protobuf.SubWrapper', null, global);
goog.exportSymbol('proto.blue.muffin.models.Protobuf.UserRef', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blue.muffin.models.Protobuf.EntityRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blue.muffin.models.Protobuf.EntityRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blue.muffin.models.Protobuf.EntityRef.displayName = 'proto.blue.muffin.models.Protobuf.EntityRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blue.muffin.models.Protobuf.AccountData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blue.muffin.models.Protobuf.AccountData.repeatedFields_, null);
};
goog.inherits(proto.blue.muffin.models.Protobuf.AccountData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blue.muffin.models.Protobuf.AccountData.displayName = 'proto.blue.muffin.models.Protobuf.AccountData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blue.muffin.models.Protobuf.UserRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blue.muffin.models.Protobuf.UserRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blue.muffin.models.Protobuf.UserRef.displayName = 'proto.blue.muffin.models.Protobuf.UserRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blue.muffin.models.Protobuf.ComponentRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blue.muffin.models.Protobuf.ComponentRef.repeatedFields_, null);
};
goog.inherits(proto.blue.muffin.models.Protobuf.ComponentRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blue.muffin.models.Protobuf.ComponentRef.displayName = 'proto.blue.muffin.models.Protobuf.ComponentRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blue.muffin.models.Protobuf.PropComplex1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blue.muffin.models.Protobuf.PropComplex1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blue.muffin.models.Protobuf.PropComplex1.displayName = 'proto.blue.muffin.models.Protobuf.PropComplex1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blue.muffin.models.Protobuf.PropComplex2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blue.muffin.models.Protobuf.PropComplex2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blue.muffin.models.Protobuf.PropComplex2.displayName = 'proto.blue.muffin.models.Protobuf.PropComplex2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blue.muffin.models.Protobuf.PropDetailed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blue.muffin.models.Protobuf.PropDetailed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blue.muffin.models.Protobuf.PropDetailed.displayName = 'proto.blue.muffin.models.Protobuf.PropDetailed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blue.muffin.models.Protobuf.PropFrame = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blue.muffin.models.Protobuf.PropFrame, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blue.muffin.models.Protobuf.PropFrame.displayName = 'proto.blue.muffin.models.Protobuf.PropFrame';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blue.muffin.models.Protobuf.PropOutline = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blue.muffin.models.Protobuf.PropOutline, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blue.muffin.models.Protobuf.PropOutline.displayName = 'proto.blue.muffin.models.Protobuf.PropOutline';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blue.muffin.models.Protobuf.ContainedObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blue.muffin.models.Protobuf.ContainedObject.repeatedFields_, null);
};
goog.inherits(proto.blue.muffin.models.Protobuf.ContainedObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blue.muffin.models.Protobuf.ContainedObject.displayName = 'proto.blue.muffin.models.Protobuf.ContainedObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blue.muffin.models.Protobuf.ContainerAttributes.repeatedFields_, null);
};
goog.inherits(proto.blue.muffin.models.Protobuf.ContainerAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blue.muffin.models.Protobuf.ContainerAttributes.displayName = 'proto.blue.muffin.models.Protobuf.ContainerAttributes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blue.muffin.models.Protobuf.Container = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blue.muffin.models.Protobuf.Container.repeatedFields_, null);
};
goog.inherits(proto.blue.muffin.models.Protobuf.Container, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blue.muffin.models.Protobuf.Container.displayName = 'proto.blue.muffin.models.Protobuf.Container';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blue.muffin.models.Protobuf.SubWrapper = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.blue.muffin.models.Protobuf.SubWrapper.repeatedFields_, null);
};
goog.inherits(proto.blue.muffin.models.Protobuf.SubWrapper, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.blue.muffin.models.Protobuf.SubWrapper.displayName = 'proto.blue.muffin.models.Protobuf.SubWrapper';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blue.muffin.models.Protobuf.EntityRef.prototype.toObject = function(opt_includeInstance) {
  return proto.blue.muffin.models.Protobuf.EntityRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blue.muffin.models.Protobuf.EntityRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.EntityRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blue.muffin.models.Protobuf.EntityRef}
 */
proto.blue.muffin.models.Protobuf.EntityRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blue.muffin.models.Protobuf.EntityRef;
  return proto.blue.muffin.models.Protobuf.EntityRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blue.muffin.models.Protobuf.EntityRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blue.muffin.models.Protobuf.EntityRef}
 */
proto.blue.muffin.models.Protobuf.EntityRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blue.muffin.models.Protobuf.EntityRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blue.muffin.models.Protobuf.EntityRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blue.muffin.models.Protobuf.EntityRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.EntityRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.EntityRef.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.EntityRef} returns this
 */
proto.blue.muffin.models.Protobuf.EntityRef.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.EntityRef.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.EntityRef} returns this
 */
proto.blue.muffin.models.Protobuf.EntityRef.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blue.muffin.models.Protobuf.AccountData.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blue.muffin.models.Protobuf.AccountData.prototype.toObject = function(opt_includeInstance) {
  return proto.blue.muffin.models.Protobuf.AccountData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blue.muffin.models.Protobuf.AccountData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.AccountData.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.blue.muffin.models.Protobuf.UserRef.toObject(includeInstance, f),
    permissionsList: jspb.Message.toObjectList(msg.getPermissionsList(),
    proto.blue.muffin.models.Protobuf.ComponentRef.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blue.muffin.models.Protobuf.AccountData}
 */
proto.blue.muffin.models.Protobuf.AccountData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blue.muffin.models.Protobuf.AccountData;
  return proto.blue.muffin.models.Protobuf.AccountData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blue.muffin.models.Protobuf.AccountData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blue.muffin.models.Protobuf.AccountData}
 */
proto.blue.muffin.models.Protobuf.AccountData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.blue.muffin.models.Protobuf.UserRef;
      reader.readMessage(value,proto.blue.muffin.models.Protobuf.UserRef.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = new proto.blue.muffin.models.Protobuf.ComponentRef;
      reader.readMessage(value,proto.blue.muffin.models.Protobuf.ComponentRef.deserializeBinaryFromReader);
      msg.addPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blue.muffin.models.Protobuf.AccountData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blue.muffin.models.Protobuf.AccountData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blue.muffin.models.Protobuf.AccountData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.AccountData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.blue.muffin.models.Protobuf.UserRef.serializeBinaryToWriter
    );
  }
  f = message.getPermissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.blue.muffin.models.Protobuf.ComponentRef.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserRef user = 1;
 * @return {?proto.blue.muffin.models.Protobuf.UserRef}
 */
proto.blue.muffin.models.Protobuf.AccountData.prototype.getUser = function() {
  return /** @type{?proto.blue.muffin.models.Protobuf.UserRef} */ (
    jspb.Message.getWrapperField(this, proto.blue.muffin.models.Protobuf.UserRef, 1));
};


/**
 * @param {?proto.blue.muffin.models.Protobuf.UserRef|undefined} value
 * @return {!proto.blue.muffin.models.Protobuf.AccountData} returns this
*/
proto.blue.muffin.models.Protobuf.AccountData.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blue.muffin.models.Protobuf.AccountData} returns this
 */
proto.blue.muffin.models.Protobuf.AccountData.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.AccountData.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ComponentRef permissions = 2;
 * @return {!Array<!proto.blue.muffin.models.Protobuf.ComponentRef>}
 */
proto.blue.muffin.models.Protobuf.AccountData.prototype.getPermissionsList = function() {
  return /** @type{!Array<!proto.blue.muffin.models.Protobuf.ComponentRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.blue.muffin.models.Protobuf.ComponentRef, 2));
};


/**
 * @param {!Array<!proto.blue.muffin.models.Protobuf.ComponentRef>} value
 * @return {!proto.blue.muffin.models.Protobuf.AccountData} returns this
*/
proto.blue.muffin.models.Protobuf.AccountData.prototype.setPermissionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.blue.muffin.models.Protobuf.ComponentRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blue.muffin.models.Protobuf.ComponentRef}
 */
proto.blue.muffin.models.Protobuf.AccountData.prototype.addPermissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.blue.muffin.models.Protobuf.ComponentRef, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blue.muffin.models.Protobuf.AccountData} returns this
 */
proto.blue.muffin.models.Protobuf.AccountData.prototype.clearPermissionsList = function() {
  return this.setPermissionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.toObject = function(opt_includeInstance) {
  return proto.blue.muffin.models.Protobuf.UserRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blue.muffin.models.Protobuf.UserRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.UserRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    firstName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    email: jspb.Message.getFieldWithDefault(msg, 4, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 5, ""),
    avatar: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blue.muffin.models.Protobuf.UserRef}
 */
proto.blue.muffin.models.Protobuf.UserRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blue.muffin.models.Protobuf.UserRef;
  return proto.blue.muffin.models.Protobuf.UserRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blue.muffin.models.Protobuf.UserRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blue.muffin.models.Protobuf.UserRef}
 */
proto.blue.muffin.models.Protobuf.UserRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatar(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blue.muffin.models.Protobuf.UserRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blue.muffin.models.Protobuf.UserRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.UserRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.UserRef} returns this
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string first_name = 2;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.UserRef} returns this
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.setFirstName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string last_name = 3;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.UserRef} returns this
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.setLastName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string email = 4;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.UserRef} returns this
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string phone = 5;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.UserRef} returns this
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.setPhone = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.blue.muffin.models.Protobuf.UserRef} returns this
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.clearPhone = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.hasPhone = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string avatar = 6;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.getAvatar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.UserRef} returns this
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.setAvatar = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.blue.muffin.models.Protobuf.UserRef} returns this
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.clearAvatar = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.UserRef.prototype.hasAvatar = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blue.muffin.models.Protobuf.ComponentRef.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blue.muffin.models.Protobuf.ComponentRef.prototype.toObject = function(opt_includeInstance) {
  return proto.blue.muffin.models.Protobuf.ComponentRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blue.muffin.models.Protobuf.ComponentRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.ComponentRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    componentId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    allowedList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blue.muffin.models.Protobuf.ComponentRef}
 */
proto.blue.muffin.models.Protobuf.ComponentRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blue.muffin.models.Protobuf.ComponentRef;
  return proto.blue.muffin.models.Protobuf.ComponentRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blue.muffin.models.Protobuf.ComponentRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blue.muffin.models.Protobuf.ComponentRef}
 */
proto.blue.muffin.models.Protobuf.ComponentRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setComponentId(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAllowed(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blue.muffin.models.Protobuf.ComponentRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blue.muffin.models.Protobuf.ComponentRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blue.muffin.models.Protobuf.ComponentRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.ComponentRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getComponentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAllowedList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
};


/**
 * optional string component_id = 1;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.ComponentRef.prototype.getComponentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.ComponentRef} returns this
 */
proto.blue.muffin.models.Protobuf.ComponentRef.prototype.setComponentId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated int32 allowed = 2;
 * @return {!Array<number>}
 */
proto.blue.muffin.models.Protobuf.ComponentRef.prototype.getAllowedList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.blue.muffin.models.Protobuf.ComponentRef} returns this
 */
proto.blue.muffin.models.Protobuf.ComponentRef.prototype.setAllowedList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.blue.muffin.models.Protobuf.ComponentRef} returns this
 */
proto.blue.muffin.models.Protobuf.ComponentRef.prototype.addAllowed = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blue.muffin.models.Protobuf.ComponentRef} returns this
 */
proto.blue.muffin.models.Protobuf.ComponentRef.prototype.clearAllowedList = function() {
  return this.setAllowedList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blue.muffin.models.Protobuf.PropComplex1.prototype.toObject = function(opt_includeInstance) {
  return proto.blue.muffin.models.Protobuf.PropComplex1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blue.muffin.models.Protobuf.PropComplex1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.PropComplex1.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attrA: jspb.Message.getFieldWithDefault(msg, 2, 0),
    attrB: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blue.muffin.models.Protobuf.PropComplex1}
 */
proto.blue.muffin.models.Protobuf.PropComplex1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blue.muffin.models.Protobuf.PropComplex1;
  return proto.blue.muffin.models.Protobuf.PropComplex1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blue.muffin.models.Protobuf.PropComplex1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blue.muffin.models.Protobuf.PropComplex1}
 */
proto.blue.muffin.models.Protobuf.PropComplex1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAttrA(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAttrB(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blue.muffin.models.Protobuf.PropComplex1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blue.muffin.models.Protobuf.PropComplex1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blue.muffin.models.Protobuf.PropComplex1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.PropComplex1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAttrA();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAttrB();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.PropComplex1.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.PropComplex1} returns this
 */
proto.blue.muffin.models.Protobuf.PropComplex1.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 attr_a = 2;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.PropComplex1.prototype.getAttrA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.PropComplex1} returns this
 */
proto.blue.muffin.models.Protobuf.PropComplex1.prototype.setAttrA = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 attr_b = 3;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.PropComplex1.prototype.getAttrB = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.PropComplex1} returns this
 */
proto.blue.muffin.models.Protobuf.PropComplex1.prototype.setAttrB = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blue.muffin.models.Protobuf.PropComplex2.prototype.toObject = function(opt_includeInstance) {
  return proto.blue.muffin.models.Protobuf.PropComplex2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blue.muffin.models.Protobuf.PropComplex2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.PropComplex2.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyParent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    keyChild: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blue.muffin.models.Protobuf.PropComplex2}
 */
proto.blue.muffin.models.Protobuf.PropComplex2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blue.muffin.models.Protobuf.PropComplex2;
  return proto.blue.muffin.models.Protobuf.PropComplex2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blue.muffin.models.Protobuf.PropComplex2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blue.muffin.models.Protobuf.PropComplex2}
 */
proto.blue.muffin.models.Protobuf.PropComplex2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyParent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyChild(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blue.muffin.models.Protobuf.PropComplex2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blue.muffin.models.Protobuf.PropComplex2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blue.muffin.models.Protobuf.PropComplex2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.PropComplex2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyParent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKeyChild();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key_parent = 1;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.PropComplex2.prototype.getKeyParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.PropComplex2} returns this
 */
proto.blue.muffin.models.Protobuf.PropComplex2.prototype.setKeyParent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string key_child = 2;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.PropComplex2.prototype.getKeyChild = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.PropComplex2} returns this
 */
proto.blue.muffin.models.Protobuf.PropComplex2.prototype.setKeyChild = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.toObject = function(opt_includeInstance) {
  return proto.blue.muffin.models.Protobuf.PropDetailed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blue.muffin.models.Protobuf.PropDetailed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.PropDetailed.toObject = function(includeInstance, msg) {
  var f, obj = {
    attrA: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    attrB: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    attrC: jspb.Message.getFieldWithDefault(msg, 3, 0),
    attrD: jspb.Message.getFieldWithDefault(msg, 4, 0),
    prop1: (f = msg.getProp1()) && proto.blue.muffin.models.Protobuf.PropComplex1.toObject(includeInstance, f),
    prop2: (f = msg.getProp2()) && proto.blue.muffin.models.Protobuf.PropComplex2.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blue.muffin.models.Protobuf.PropDetailed}
 */
proto.blue.muffin.models.Protobuf.PropDetailed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blue.muffin.models.Protobuf.PropDetailed;
  return proto.blue.muffin.models.Protobuf.PropDetailed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blue.muffin.models.Protobuf.PropDetailed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blue.muffin.models.Protobuf.PropDetailed}
 */
proto.blue.muffin.models.Protobuf.PropDetailed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAttrA(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAttrB(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAttrC(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAttrD(value);
      break;
    case 5:
      var value = new proto.blue.muffin.models.Protobuf.PropComplex1;
      reader.readMessage(value,proto.blue.muffin.models.Protobuf.PropComplex1.deserializeBinaryFromReader);
      msg.setProp1(value);
      break;
    case 6:
      var value = new proto.blue.muffin.models.Protobuf.PropComplex2;
      reader.readMessage(value,proto.blue.muffin.models.Protobuf.PropComplex2.deserializeBinaryFromReader);
      msg.setProp2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blue.muffin.models.Protobuf.PropDetailed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blue.muffin.models.Protobuf.PropDetailed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.PropDetailed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttrA();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAttrB();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getAttrC();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getAttrD();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getProp1();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.blue.muffin.models.Protobuf.PropComplex1.serializeBinaryToWriter
    );
  }
  f = message.getProp2();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.blue.muffin.models.Protobuf.PropComplex2.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool attr_a = 1;
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.getAttrA = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.blue.muffin.models.Protobuf.PropDetailed} returns this
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.setAttrA = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool attr_b = 2;
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.getAttrB = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.blue.muffin.models.Protobuf.PropDetailed} returns this
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.setAttrB = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 attr_c = 3;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.getAttrC = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.PropDetailed} returns this
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.setAttrC = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 attr_d = 4;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.getAttrD = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.PropDetailed} returns this
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.setAttrD = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional PropComplex1 prop1 = 5;
 * @return {?proto.blue.muffin.models.Protobuf.PropComplex1}
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.getProp1 = function() {
  return /** @type{?proto.blue.muffin.models.Protobuf.PropComplex1} */ (
    jspb.Message.getWrapperField(this, proto.blue.muffin.models.Protobuf.PropComplex1, 5));
};


/**
 * @param {?proto.blue.muffin.models.Protobuf.PropComplex1|undefined} value
 * @return {!proto.blue.muffin.models.Protobuf.PropDetailed} returns this
*/
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.setProp1 = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blue.muffin.models.Protobuf.PropDetailed} returns this
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.clearProp1 = function() {
  return this.setProp1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.hasProp1 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PropComplex2 prop2 = 6;
 * @return {?proto.blue.muffin.models.Protobuf.PropComplex2}
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.getProp2 = function() {
  return /** @type{?proto.blue.muffin.models.Protobuf.PropComplex2} */ (
    jspb.Message.getWrapperField(this, proto.blue.muffin.models.Protobuf.PropComplex2, 6));
};


/**
 * @param {?proto.blue.muffin.models.Protobuf.PropComplex2|undefined} value
 * @return {!proto.blue.muffin.models.Protobuf.PropDetailed} returns this
*/
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.setProp2 = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blue.muffin.models.Protobuf.PropDetailed} returns this
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.clearProp2 = function() {
  return this.setProp2(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.PropDetailed.prototype.hasProp2 = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blue.muffin.models.Protobuf.PropFrame.prototype.toObject = function(opt_includeInstance) {
  return proto.blue.muffin.models.Protobuf.PropFrame.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blue.muffin.models.Protobuf.PropFrame} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.PropFrame.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    refKey: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ignoredOnExchange: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    shapeId: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blue.muffin.models.Protobuf.PropFrame}
 */
proto.blue.muffin.models.Protobuf.PropFrame.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blue.muffin.models.Protobuf.PropFrame;
  return proto.blue.muffin.models.Protobuf.PropFrame.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blue.muffin.models.Protobuf.PropFrame} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blue.muffin.models.Protobuf.PropFrame}
 */
proto.blue.muffin.models.Protobuf.PropFrame.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefKey(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoredOnExchange(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShapeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blue.muffin.models.Protobuf.PropFrame.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blue.muffin.models.Protobuf.PropFrame.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blue.muffin.models.Protobuf.PropFrame} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.PropFrame.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRefKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIgnoredOnExchange();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getShapeId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.PropFrame.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.PropFrame} returns this
 */
proto.blue.muffin.models.Protobuf.PropFrame.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.PropFrame.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.PropFrame} returns this
 */
proto.blue.muffin.models.Protobuf.PropFrame.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ref_key = 3;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.PropFrame.prototype.getRefKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.PropFrame} returns this
 */
proto.blue.muffin.models.Protobuf.PropFrame.prototype.setRefKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool ignored_on_exchange = 4;
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.PropFrame.prototype.getIgnoredOnExchange = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.blue.muffin.models.Protobuf.PropFrame} returns this
 */
proto.blue.muffin.models.Protobuf.PropFrame.prototype.setIgnoredOnExchange = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int32 shape_id = 5;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.PropFrame.prototype.getShapeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.PropFrame} returns this
 */
proto.blue.muffin.models.Protobuf.PropFrame.prototype.setShapeId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.toObject = function(opt_includeInstance) {
  return proto.blue.muffin.models.Protobuf.PropOutline.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blue.muffin.models.Protobuf.PropOutline} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.PropOutline.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    thickness: jspb.Message.getFieldWithDefault(msg, 2, 0),
    wrapperId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    posX: jspb.Message.getFieldWithDefault(msg, 4, 0),
    posY: jspb.Message.getFieldWithDefault(msg, 5, 0),
    sizePx: jspb.Message.getFieldWithDefault(msg, 6, 0),
    sizeMm: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blue.muffin.models.Protobuf.PropOutline}
 */
proto.blue.muffin.models.Protobuf.PropOutline.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blue.muffin.models.Protobuf.PropOutline;
  return proto.blue.muffin.models.Protobuf.PropOutline.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blue.muffin.models.Protobuf.PropOutline} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blue.muffin.models.Protobuf.PropOutline}
 */
proto.blue.muffin.models.Protobuf.PropOutline.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThickness(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWrapperId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosX(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosY(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSizePx(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSizeMm(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blue.muffin.models.Protobuf.PropOutline.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blue.muffin.models.Protobuf.PropOutline} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.PropOutline.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getThickness();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getWrapperId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPosX();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPosY();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSizePx();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getSizeMm();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.PropOutline} returns this
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 thickness = 2;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.getThickness = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.PropOutline} returns this
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.setThickness = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 wrapper_id = 3;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.getWrapperId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.PropOutline} returns this
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.setWrapperId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 pos_x = 4;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.getPosX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.PropOutline} returns this
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.setPosX = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 pos_y = 5;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.getPosY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.PropOutline} returns this
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.setPosY = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 size_px = 6;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.getSizePx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.PropOutline} returns this
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.setSizePx = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 size_mm = 7;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.getSizeMm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.PropOutline} returns this
 */
proto.blue.muffin.models.Protobuf.PropOutline.prototype.setSizeMm = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blue.muffin.models.Protobuf.ContainedObject.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.toObject = function(opt_includeInstance) {
  return proto.blue.muffin.models.Protobuf.ContainedObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blue.muffin.models.Protobuf.ContainedObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.ContainedObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    wrapperId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    frameId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    thickness: jspb.Message.getFieldWithDefault(msg, 4, 0),
    outlinesList: jspb.Message.toObjectList(msg.getOutlinesList(),
    proto.blue.muffin.models.Protobuf.PropOutline.toObject, includeInstance),
    frame: (f = msg.getFrame()) && proto.blue.muffin.models.Protobuf.PropFrame.toObject(includeInstance, f),
    parentId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    refKey: jspb.Message.getFieldWithDefault(msg, 8, ""),
    posX: jspb.Message.getFieldWithDefault(msg, 9, 0),
    posY: jspb.Message.getFieldWithDefault(msg, 10, 0),
    sizePx: jspb.Message.getFieldWithDefault(msg, 11, 0),
    sizeMm: jspb.Message.getFieldWithDefault(msg, 12, 0),
    isVisible: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    isEditable: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    isAccessible: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    isTested: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    contentLimit: jspb.Message.getFieldWithDefault(msg, 17, 0),
    details: (f = msg.getDetails()) && proto.blue.muffin.models.Protobuf.PropDetailed.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blue.muffin.models.Protobuf.ContainedObject;
  return proto.blue.muffin.models.Protobuf.ContainedObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blue.muffin.models.Protobuf.ContainedObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWrapperId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrameId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThickness(value);
      break;
    case 5:
      var value = new proto.blue.muffin.models.Protobuf.PropOutline;
      reader.readMessage(value,proto.blue.muffin.models.Protobuf.PropOutline.deserializeBinaryFromReader);
      msg.addOutlines(value);
      break;
    case 6:
      var value = new proto.blue.muffin.models.Protobuf.PropFrame;
      reader.readMessage(value,proto.blue.muffin.models.Protobuf.PropFrame.deserializeBinaryFromReader);
      msg.setFrame(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setParentId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefKey(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosX(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosY(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSizePx(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSizeMm(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsVisible(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEditable(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAccessible(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsTested(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setContentLimit(value);
      break;
    case 18:
      var value = new proto.blue.muffin.models.Protobuf.PropDetailed;
      reader.readMessage(value,proto.blue.muffin.models.Protobuf.PropDetailed.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blue.muffin.models.Protobuf.ContainedObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blue.muffin.models.Protobuf.ContainedObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.ContainedObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getWrapperId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFrameId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getThickness();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getOutlinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.blue.muffin.models.Protobuf.PropOutline.serializeBinaryToWriter
    );
  }
  f = message.getFrame();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.blue.muffin.models.Protobuf.PropFrame.serializeBinaryToWriter
    );
  }
  f = message.getParentId();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getRefKey();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPosX();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getPosY();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getSizePx();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getSizeMm();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getIsVisible();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIsEditable();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getIsAccessible();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getIsTested();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getContentLimit();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.blue.muffin.models.Protobuf.PropDetailed.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 wrapper_id = 2;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getWrapperId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setWrapperId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 frame_id = 3;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getFrameId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setFrameId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 thickness = 4;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getThickness = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setThickness = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated PropOutline outlines = 5;
 * @return {!Array<!proto.blue.muffin.models.Protobuf.PropOutline>}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getOutlinesList = function() {
  return /** @type{!Array<!proto.blue.muffin.models.Protobuf.PropOutline>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.blue.muffin.models.Protobuf.PropOutline, 5));
};


/**
 * @param {!Array<!proto.blue.muffin.models.Protobuf.PropOutline>} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
*/
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setOutlinesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.blue.muffin.models.Protobuf.PropOutline=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blue.muffin.models.Protobuf.PropOutline}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.addOutlines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.blue.muffin.models.Protobuf.PropOutline, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.clearOutlinesList = function() {
  return this.setOutlinesList([]);
};


/**
 * optional PropFrame frame = 6;
 * @return {?proto.blue.muffin.models.Protobuf.PropFrame}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getFrame = function() {
  return /** @type{?proto.blue.muffin.models.Protobuf.PropFrame} */ (
    jspb.Message.getWrapperField(this, proto.blue.muffin.models.Protobuf.PropFrame, 6));
};


/**
 * @param {?proto.blue.muffin.models.Protobuf.PropFrame|undefined} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
*/
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setFrame = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.clearFrame = function() {
  return this.setFrame(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.hasFrame = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 parent_id = 7;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getParentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setParentId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string ref_key = 8;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getRefKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setRefKey = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 pos_x = 9;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getPosX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setPosX = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 pos_y = 10;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getPosY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setPosY = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 size_px = 11;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getSizePx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setSizePx = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 size_mm = 12;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getSizeMm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setSizeMm = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional bool is_visible = 13;
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getIsVisible = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setIsVisible = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool is_editable = 14;
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getIsEditable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setIsEditable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool is_accessible = 15;
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getIsAccessible = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setIsAccessible = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool is_tested = 16;
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getIsTested = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setIsTested = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional int32 content_limit = 17;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getContentLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setContentLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional PropDetailed details = 18;
 * @return {?proto.blue.muffin.models.Protobuf.PropDetailed}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.getDetails = function() {
  return /** @type{?proto.blue.muffin.models.Protobuf.PropDetailed} */ (
    jspb.Message.getWrapperField(this, proto.blue.muffin.models.Protobuf.PropDetailed, 18));
};


/**
 * @param {?proto.blue.muffin.models.Protobuf.PropDetailed|undefined} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
*/
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.setDetails = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject} returns this
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.clearDetails = function() {
  return this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.ContainedObject.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 18) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.blue.muffin.models.Protobuf.ContainerAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blue.muffin.models.Protobuf.ContainerAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    refKey: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ignoredOnExchange: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    refPointId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    attrA: jspb.Message.getFieldWithDefault(msg, 6, 0),
    attrB: jspb.Message.getFieldWithDefault(msg, 7, 0),
    framesList: jspb.Message.toObjectList(msg.getFramesList(),
    proto.blue.muffin.models.Protobuf.PropFrame.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blue.muffin.models.Protobuf.ContainerAttributes}
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blue.muffin.models.Protobuf.ContainerAttributes;
  return proto.blue.muffin.models.Protobuf.ContainerAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blue.muffin.models.Protobuf.ContainerAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blue.muffin.models.Protobuf.ContainerAttributes}
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefKey(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoredOnExchange(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRefPointId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAttrA(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAttrB(value);
      break;
    case 8:
      var value = new proto.blue.muffin.models.Protobuf.PropFrame;
      reader.readMessage(value,proto.blue.muffin.models.Protobuf.PropFrame.deserializeBinaryFromReader);
      msg.addFrames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blue.muffin.models.Protobuf.ContainerAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blue.muffin.models.Protobuf.ContainerAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRefKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIgnoredOnExchange();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getRefPointId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getAttrA();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getAttrB();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getFramesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.blue.muffin.models.Protobuf.PropFrame.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainerAttributes} returns this
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainerAttributes} returns this
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ref_key = 3;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.getRefKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainerAttributes} returns this
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.setRefKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool ignored_on_exchange = 4;
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.getIgnoredOnExchange = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainerAttributes} returns this
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.setIgnoredOnExchange = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int32 ref_point_id = 5;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.getRefPointId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainerAttributes} returns this
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.setRefPointId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 attr_a = 6;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.getAttrA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainerAttributes} returns this
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.setAttrA = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 attr_b = 7;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.getAttrB = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainerAttributes} returns this
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.setAttrB = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated PropFrame frames = 8;
 * @return {!Array<!proto.blue.muffin.models.Protobuf.PropFrame>}
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.getFramesList = function() {
  return /** @type{!Array<!proto.blue.muffin.models.Protobuf.PropFrame>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.blue.muffin.models.Protobuf.PropFrame, 8));
};


/**
 * @param {!Array<!proto.blue.muffin.models.Protobuf.PropFrame>} value
 * @return {!proto.blue.muffin.models.Protobuf.ContainerAttributes} returns this
*/
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.setFramesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.blue.muffin.models.Protobuf.PropFrame=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blue.muffin.models.Protobuf.PropFrame}
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.addFrames = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.blue.muffin.models.Protobuf.PropFrame, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blue.muffin.models.Protobuf.ContainerAttributes} returns this
 */
proto.blue.muffin.models.Protobuf.ContainerAttributes.prototype.clearFramesList = function() {
  return this.setFramesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blue.muffin.models.Protobuf.Container.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blue.muffin.models.Protobuf.Container.prototype.toObject = function(opt_includeInstance) {
  return proto.blue.muffin.models.Protobuf.Container.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blue.muffin.models.Protobuf.Container} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.Container.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    refKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    posX: jspb.Message.getFieldWithDefault(msg, 3, 0),
    posY: jspb.Message.getFieldWithDefault(msg, 4, 0),
    sizePx: jspb.Message.getFieldWithDefault(msg, 5, 0),
    sizeMm: jspb.Message.getFieldWithDefault(msg, 6, 0),
    attrA: jspb.Message.getFieldWithDefault(msg, 7, 0),
    attrB: jspb.Message.getFieldWithDefault(msg, 8, 0),
    childrenList: jspb.Message.toObjectList(msg.getChildrenList(),
    proto.blue.muffin.models.Protobuf.ContainedObject.toObject, includeInstance),
    attributes: (f = msg.getAttributes()) && proto.blue.muffin.models.Protobuf.ContainerAttributes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blue.muffin.models.Protobuf.Container}
 */
proto.blue.muffin.models.Protobuf.Container.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blue.muffin.models.Protobuf.Container;
  return proto.blue.muffin.models.Protobuf.Container.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blue.muffin.models.Protobuf.Container} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blue.muffin.models.Protobuf.Container}
 */
proto.blue.muffin.models.Protobuf.Container.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefKey(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosX(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosY(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSizePx(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSizeMm(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAttrA(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAttrB(value);
      break;
    case 9:
      var value = new proto.blue.muffin.models.Protobuf.ContainedObject;
      reader.readMessage(value,proto.blue.muffin.models.Protobuf.ContainedObject.deserializeBinaryFromReader);
      msg.addChildren(value);
      break;
    case 10:
      var value = new proto.blue.muffin.models.Protobuf.ContainerAttributes;
      reader.readMessage(value,proto.blue.muffin.models.Protobuf.ContainerAttributes.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blue.muffin.models.Protobuf.Container.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blue.muffin.models.Protobuf.Container.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blue.muffin.models.Protobuf.Container} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.Container.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getRefKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPosX();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPosY();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getSizePx();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSizeMm();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getAttrA();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getAttrB();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.blue.muffin.models.Protobuf.ContainedObject.serializeBinaryToWriter
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.blue.muffin.models.Protobuf.ContainerAttributes.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.Container.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.Container} returns this
 */
proto.blue.muffin.models.Protobuf.Container.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string ref_key = 2;
 * @return {string}
 */
proto.blue.muffin.models.Protobuf.Container.prototype.getRefKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.blue.muffin.models.Protobuf.Container} returns this
 */
proto.blue.muffin.models.Protobuf.Container.prototype.setRefKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 pos_x = 3;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.Container.prototype.getPosX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.Container} returns this
 */
proto.blue.muffin.models.Protobuf.Container.prototype.setPosX = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 pos_y = 4;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.Container.prototype.getPosY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.Container} returns this
 */
proto.blue.muffin.models.Protobuf.Container.prototype.setPosY = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 size_px = 5;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.Container.prototype.getSizePx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.Container} returns this
 */
proto.blue.muffin.models.Protobuf.Container.prototype.setSizePx = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 size_mm = 6;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.Container.prototype.getSizeMm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.Container} returns this
 */
proto.blue.muffin.models.Protobuf.Container.prototype.setSizeMm = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 attr_a = 7;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.Container.prototype.getAttrA = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.Container} returns this
 */
proto.blue.muffin.models.Protobuf.Container.prototype.setAttrA = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 attr_b = 8;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.Container.prototype.getAttrB = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.Container} returns this
 */
proto.blue.muffin.models.Protobuf.Container.prototype.setAttrB = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated ContainedObject children = 9;
 * @return {!Array<!proto.blue.muffin.models.Protobuf.ContainedObject>}
 */
proto.blue.muffin.models.Protobuf.Container.prototype.getChildrenList = function() {
  return /** @type{!Array<!proto.blue.muffin.models.Protobuf.ContainedObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.blue.muffin.models.Protobuf.ContainedObject, 9));
};


/**
 * @param {!Array<!proto.blue.muffin.models.Protobuf.ContainedObject>} value
 * @return {!proto.blue.muffin.models.Protobuf.Container} returns this
*/
proto.blue.muffin.models.Protobuf.Container.prototype.setChildrenList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.blue.muffin.models.Protobuf.ContainedObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blue.muffin.models.Protobuf.ContainedObject}
 */
proto.blue.muffin.models.Protobuf.Container.prototype.addChildren = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.blue.muffin.models.Protobuf.ContainedObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blue.muffin.models.Protobuf.Container} returns this
 */
proto.blue.muffin.models.Protobuf.Container.prototype.clearChildrenList = function() {
  return this.setChildrenList([]);
};


/**
 * optional ContainerAttributes attributes = 10;
 * @return {?proto.blue.muffin.models.Protobuf.ContainerAttributes}
 */
proto.blue.muffin.models.Protobuf.Container.prototype.getAttributes = function() {
  return /** @type{?proto.blue.muffin.models.Protobuf.ContainerAttributes} */ (
    jspb.Message.getWrapperField(this, proto.blue.muffin.models.Protobuf.ContainerAttributes, 10));
};


/**
 * @param {?proto.blue.muffin.models.Protobuf.ContainerAttributes|undefined} value
 * @return {!proto.blue.muffin.models.Protobuf.Container} returns this
*/
proto.blue.muffin.models.Protobuf.Container.prototype.setAttributes = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.blue.muffin.models.Protobuf.Container} returns this
 */
proto.blue.muffin.models.Protobuf.Container.prototype.clearAttributes = function() {
  return this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.blue.muffin.models.Protobuf.Container.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blue.muffin.models.Protobuf.SubWrapper.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.blue.muffin.models.Protobuf.SubWrapper.prototype.toObject = function(opt_includeInstance) {
  return proto.blue.muffin.models.Protobuf.SubWrapper.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.blue.muffin.models.Protobuf.SubWrapper} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.SubWrapper.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    revision: jspb.Message.getFieldWithDefault(msg, 2, 0),
    containersList: jspb.Message.toObjectList(msg.getContainersList(),
    proto.blue.muffin.models.Protobuf.Container.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blue.muffin.models.Protobuf.SubWrapper}
 */
proto.blue.muffin.models.Protobuf.SubWrapper.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.blue.muffin.models.Protobuf.SubWrapper;
  return proto.blue.muffin.models.Protobuf.SubWrapper.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blue.muffin.models.Protobuf.SubWrapper} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blue.muffin.models.Protobuf.SubWrapper}
 */
proto.blue.muffin.models.Protobuf.SubWrapper.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRevision(value);
      break;
    case 3:
      var value = new proto.blue.muffin.models.Protobuf.Container;
      reader.readMessage(value,proto.blue.muffin.models.Protobuf.Container.deserializeBinaryFromReader);
      msg.addContainers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blue.muffin.models.Protobuf.SubWrapper.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.blue.muffin.models.Protobuf.SubWrapper.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blue.muffin.models.Protobuf.SubWrapper} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blue.muffin.models.Protobuf.SubWrapper.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getRevision();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getContainersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.blue.muffin.models.Protobuf.Container.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.SubWrapper.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.SubWrapper} returns this
 */
proto.blue.muffin.models.Protobuf.SubWrapper.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 revision = 2;
 * @return {number}
 */
proto.blue.muffin.models.Protobuf.SubWrapper.prototype.getRevision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.blue.muffin.models.Protobuf.SubWrapper} returns this
 */
proto.blue.muffin.models.Protobuf.SubWrapper.prototype.setRevision = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Container containers = 3;
 * @return {!Array<!proto.blue.muffin.models.Protobuf.Container>}
 */
proto.blue.muffin.models.Protobuf.SubWrapper.prototype.getContainersList = function() {
  return /** @type{!Array<!proto.blue.muffin.models.Protobuf.Container>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.blue.muffin.models.Protobuf.Container, 3));
};


/**
 * @param {!Array<!proto.blue.muffin.models.Protobuf.Container>} value
 * @return {!proto.blue.muffin.models.Protobuf.SubWrapper} returns this
*/
proto.blue.muffin.models.Protobuf.SubWrapper.prototype.setContainersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.blue.muffin.models.Protobuf.Container=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blue.muffin.models.Protobuf.Container}
 */
proto.blue.muffin.models.Protobuf.SubWrapper.prototype.addContainers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.blue.muffin.models.Protobuf.Container, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.blue.muffin.models.Protobuf.SubWrapper} returns this
 */
proto.blue.muffin.models.Protobuf.SubWrapper.prototype.clearContainersList = function() {
  return this.setContainersList([]);
};


goog.object.extend(exports, proto.blue.muffin.models.Protobuf);
